{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","services/localStorageHandler.js","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Controls","state","amount","handleInput","e","setState","currentTarget","value","handleTransaction","toast","error","props","onButton","this","className","styles","controls","type","name","onChange","onClick","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","Component","Balance","countCirculation","balance","role","aria-label","deposit","toFixed","withdraw","TransactionHistory","items","history","map","transaction","key","id","Number","date","localStorage","setItem","JSON","stringify","err","console","log","accountState","getItem","parse","uuidv4","require","TransactionType","DEPOSIT","WITHDRAW","Dashboard","transactions","addTransaction","input","buttonName","target","innerText","Date","toLocaleString","reduce","acc","localStorageHandler","prevprops","prevstate","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98e68956.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__GTeXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__Ikne2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3EXJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2ZVgv\"};","import React, { Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './Controls.module.css';\r\n\r\nexport default class Controls extends Component {\r\n  state = {\r\n    amount: '',\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({ amount: e.currentTarget.value });\r\n  };\r\n\r\n  handleTransaction = e => {\r\n    const { amount } = this.state;\r\n    if (amount <= 0) {\r\n      toast.error('Введите сумму для проведения операции!');\r\n      return;\r\n    }\r\n    this.props.onButton(e, amount);\r\n    this.setState({ amount: '' });\r\n  };\r\n\r\n  render() {\r\n    const { amount } = this.state;\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={amount}\r\n          onChange={this.handleInput}\r\n        />\r\n        <button type=\"button\" onClick={this.handleTransaction}>\r\n          Deposit\r\n        </button>\r\n        <button type=\"button\" onClick={this.handleTransaction}>\r\n          Withdraw\r\n        </button>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnVisibilityChange\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Balance.module.css\";\r\n\r\nconst Balance = ({ countCirculation, balance }) => (\r\n  <section className={styles.balance}>\r\n    <span>\r\n      <span role=\"img\" aria-label=\"arrow up\">\r\n        ⬆️\r\n      </span>\r\n      {countCirculation().deposit.toFixed(2)}$\r\n    </span>\r\n    <span>\r\n      <span role=\"img\" aria-label=\"arrow down\">\r\n        ⬇️\r\n      </span>\r\n      {countCirculation().withdraw.toFixed(2)}$\r\n    </span>\r\n    <span>Balance: {balance.toFixed(2)}$</span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(transaction => (\r\n        <tr key={transaction.id}>\r\n          <td>{transaction.type}</td>\r\n          <td>{Number(transaction.amount).toFixed(2)}$</td>\r\n          <td>{transaction.date}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\nexport default TransactionHistory;\r\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst get = key => {\n  try {\n    const accountState = localStorage.getItem(key);\n    return accountState ? JSON.parse(accountState) : null;\n  } catch (err) {\n    console.log(err);\n  }\n\n  return null;\n};\n\nexport default {\n  save,\n  get,\n};\n","import React, { Component } from 'react';\r\nimport Controls from '../Controls';\r\nimport { toast } from 'react-toastify';\r\nimport Balance from '../Balance';\r\nimport TransactionHistory from '../TransactionHistory';\r\nimport styles from './Dashboard.module.css';\r\nimport localStorageHandler from '../../services/localStorageHandler';\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nconst TransactionType = {\r\n  DEPOSIT: 'deposit',\r\n  WITHDRAW: 'withdraw',\r\n};\r\n\r\nexport default class Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const accountState = localStorageHandler.get('accountState');\r\n    if (accountState) {\r\n      this.setState(accountState);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevprops, prevstate) {\r\n    if (prevstate !== this.state) {\r\n      localStorageHandler.save('accountState', this.state);\r\n    }\r\n  }\r\n\r\n  addTransaction = ({ target: { innerText: buttonName } }, input) => {\r\n    const amount = Number(input);\r\n    const type =\r\n      buttonName === 'Deposit'\r\n        ? TransactionType.DEPOSIT\r\n        : TransactionType.WITHDRAW;\r\n    const { balance } = this.state;\r\n    if (type === TransactionType.WITHDRAW && amount > balance) {\r\n      toast.error('На счету недостаточно средств для проведения операции!');\r\n      return;\r\n    }\r\n\r\n    const transaction = {\r\n      id: uuidv4(),\r\n      type,\r\n      amount,\r\n      date: new Date().toLocaleString(),\r\n    };\r\n\r\n    this.setState(state => ({\r\n      transactions: [...state.transactions, transaction],\r\n      balance:\r\n        type === TransactionType.DEPOSIT\r\n          ? state.balance + amount\r\n          : state.balance - amount,\r\n    }));\r\n  };\r\n\r\n  countCirculation = () => {\r\n    const circulation = this.state.transactions.reduce(\r\n      (acc, transaction) => {\r\n        return {\r\n          ...acc,\r\n          [transaction.type]:\r\n            acc[transaction.type] + Number(transaction.amount),\r\n        };\r\n      },\r\n      {\r\n        deposit: 0,\r\n        withdraw: 0,\r\n      },\r\n    );\r\n    return circulation;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.dashboard}>\r\n        <Controls onButton={this.addTransaction} />\r\n\r\n        <Balance\r\n          countCirculation={this.countCirculation}\r\n          balance={this.state.balance}\r\n        />\r\n\r\n        <TransactionHistory items={this.state.transactions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Dashboard from '../Dashboard';\r\n\r\nconst App = () => {\r\n  return <Dashboard />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}